buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
        classpath('com.bmuschko:gradle-docker-plugin:2.5') { exclude group:'com.fasterxml.jackson.jaxrs', module: 'jackson-jaxrs-json-provider' }
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.bmuschko.docker-remote-api'


import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

repositories {
    mavenCentral()
}

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
    compile.exclude module: 'logback-classic'
    compile.exclude module: 'logback-core'
}
docker{
    url = "${dockerHost}"
    //certPath=new File("${certUrl}")
}
task zip(type: Tar, dependsOn: bootRepackage) {
    extension = 'tar.gz'
    compression = Compression.GZIP

    from '.'
    baseName = 'as-geocoder-facade'
    include 'config/**'
    include 'run-bin/*.sh'
    include 'run-bin/*.bat'
    include 'run-bin/*.sql'
    include 'build/libs/*.jar'
}
build.dependsOn(zip)

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
	compile 'org.springframework.boot:spring-boot-starter-redis'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-test'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-log4j'
    compile 'org.jolokia:jolokia-core'
    compile 'com.goebl:david-webb:1.2.0'
    
    
    
}

task buildImage(type: DockerBuildImage) {
    dependsOn zip
    quiet = false
    inputDir = projectDir

    tag = "$registerBaseName/$dockerBranch/$project.name:$dockerTag"
}
task pushImage(type: DockerPushImage) {
    dependsOn buildImage
    imageName = "$registerBaseName/$dockerBranch/$project.name"
    tag="$dockerTag"
}

